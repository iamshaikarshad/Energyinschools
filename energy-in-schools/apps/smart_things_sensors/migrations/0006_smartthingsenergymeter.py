# Generated by Django 2.1.5 on 2019-03-19 14:05

import apps.energy_providers.providers.abstract
from django.db import migrations, models
from django.db.models import Q
import django.db.models.deletion
import enumfields.fields

from apps.resources.models import Resource
from apps.resources.types import ResourceChildType
from apps.smart_things_sensors.models import SmartThingsEnergyMeter, SmartThingsSensor
from apps.smart_things_devices.types import Capability


def create_smart_things_energy_meters(apps, schema_editor):
    for sensor in SmartThingsSensor.objects.filter(
            Q(capability=Capability.POWER_METER) &
            Q(device__capabilities__capability=Capability.ENERGY_METER.value)
    ):
        st_energy_meter = SmartThingsEnergyMeter(sensor_id=sensor.id)
        st_energy_meter.__dict__.update(sensor.__dict__)
        st_energy_meter.save()


def change_child_types_back(apps, schema_editor):
    for resource in Resource.objects.filter(child_type=ResourceChildType.SMART_THINGS_ENERGY_METER):
        resource.child_type = ResourceChildType.SMART_THINGS_SENSOR
        resource.save()


class Migration(migrations.Migration):

    dependencies = [
        ('energy_providers', '0002_energyprovideraccount_deleted'),
        ('smart_things_sensors', '0005_auto_20181226_1716'),
    ]

    operations = [
        migrations.CreateModel(
            name='SmartThingsEnergyMeter',
            fields=[
                ('sensor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='smart_things_energy_meter', serialize=False, to='smart_things_sensors.SmartThingsSensor')),
                ('type', enumfields.fields.EnumField(blank=True, default='UNKNOWN', enum=apps.energy_providers.providers.abstract.MeterType, max_length=20)),
                ('provider_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='smart_things_energy_meters', to='energy_providers.EnergyProviderAccount')),
            ],
            options={
                'abstract': False,
            },
            bases=('smart_things_sensors.smartthingssensor',),
        ),
        migrations.RunPython(create_smart_things_energy_meters, change_child_types_back),
    ]
