# Generated by Django 2.1 on 2019-01-03 11:38
import logging
import re
from typing import Type

import funcy
from django.contrib.auth.models import Group
from django.db import migrations

from apps.accounts.models import User
from apps.accounts.permissions import RoleName
from apps.locations.models import Location


logger = logging.getLogger(__name__)


def create_es_user(apps, _):
    user_model: Type[User] = apps.get_model('accounts', 'User')
    location_model: Type[Location] = apps.get_model('locations', 'Location')
    group_model: Type[Group] = apps.get_model('auth', 'Group')

    get_es_user_group = funcy.memoize(lambda: group_model.objects.get_or_create(name=RoleName.ES_USER)[0])

    for school in location_model.objects.filter(parent_location=None):
        if user_model.objects.filter(location=school, groups__name=RoleName.ES_USER).exists():
            continue

        sle_admin = user_model.objects.get(location=school, groups__name=RoleName.SLE_ADMIN)
        es_username = re.sub(f'{RoleName.SLE_ADMIN}$', RoleName.ES_USER, sle_admin.username)

        if es_username == sle_admin.username:
            es_username = f'{es_username}_{RoleName.ES_USER}'
            logger.warning(f'Wrong SLE admin username detected for school {school.id}. '
                           f'PLEASE CHANGE SLE ADMIN USERNAME.')

        new_es_user = user_model.objects.create(
            username=es_username,
            location=sle_admin.location,
            is_active=True
        )

        new_es_user.groups.add(get_es_user_group())
        new_es_user.save()


class Migration(migrations.Migration):
    dependencies = [
        ('accounts', '0005_auto_20181228_0932'),
        ('locations', '0009_auto_20181116_1358')
    ]

    operations = [
        migrations.RunPython(create_es_user)
    ]
